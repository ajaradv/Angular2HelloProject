define(["require", "exports", './differs/iterable_differs', './differs/default_iterable_differ', './differs/keyvalue_differs', './differs/default_keyvalue_differ', 'angular2/src/facade/lang', './parser/ast', './parser/lexer', './parser/parser', './parser/locals', './exceptions', './interfaces', './constants', './proto_change_detector', './jit_proto_change_detector', './binding_record', './directive_record', './dynamic_change_detector', './change_detector_ref', './differs/iterable_differs', './differs/keyvalue_differs', './change_detection_util'], function (require, exports, iterable_differs_1, default_iterable_differ_1, keyvalue_differs_1, default_keyvalue_differ_1, lang_1, ast_1, lexer_1, parser_1, locals_1, exceptions_1, interfaces_1, constants_1, proto_change_detector_1, jit_proto_change_detector_1, binding_record_1, directive_record_1, dynamic_change_detector_1, change_detector_ref_1, iterable_differs_2, keyvalue_differs_2, change_detection_util_1) {
    "use strict";
    exports.ASTWithSource = ast_1.ASTWithSource;
    exports.AST = ast_1.AST;
    exports.AstTransformer = ast_1.AstTransformer;
    exports.PropertyRead = ast_1.PropertyRead;
    exports.LiteralArray = ast_1.LiteralArray;
    exports.ImplicitReceiver = ast_1.ImplicitReceiver;
    exports.Lexer = lexer_1.Lexer;
    exports.Parser = parser_1.Parser;
    exports.Locals = locals_1.Locals;
    exports.DehydratedException = exceptions_1.DehydratedException;
    exports.ExpressionChangedAfterItHasBeenCheckedException = exceptions_1.ExpressionChangedAfterItHasBeenCheckedException;
    exports.ChangeDetectionError = exceptions_1.ChangeDetectionError;
    exports.ChangeDetectorDefinition = interfaces_1.ChangeDetectorDefinition;
    exports.DebugContext = interfaces_1.DebugContext;
    exports.ChangeDetectorGenConfig = interfaces_1.ChangeDetectorGenConfig;
    exports.ChangeDetectionStrategy = constants_1.ChangeDetectionStrategy;
    exports.CHANGE_DETECTION_STRATEGY_VALUES = constants_1.CHANGE_DETECTION_STRATEGY_VALUES;
    exports.DynamicProtoChangeDetector = proto_change_detector_1.DynamicProtoChangeDetector;
    exports.JitProtoChangeDetector = jit_proto_change_detector_1.JitProtoChangeDetector;
    exports.BindingRecord = binding_record_1.BindingRecord;
    exports.BindingTarget = binding_record_1.BindingTarget;
    exports.DirectiveIndex = directive_record_1.DirectiveIndex;
    exports.DirectiveRecord = directive_record_1.DirectiveRecord;
    exports.DynamicChangeDetector = dynamic_change_detector_1.DynamicChangeDetector;
    exports.ChangeDetectorRef = change_detector_ref_1.ChangeDetectorRef;
    exports.IterableDiffers = iterable_differs_2.IterableDiffers;
    exports.KeyValueDiffers = keyvalue_differs_2.KeyValueDiffers;
    exports.WrappedValue = change_detection_util_1.WrappedValue;
    exports.SimpleChange = change_detection_util_1.SimpleChange;
    /**
     * Structural diffing for `Object`s and `Map`s.
     */
    exports.keyValDiff = lang_1.CONST_EXPR([lang_1.CONST_EXPR(new default_keyvalue_differ_1.DefaultKeyValueDifferFactory())]);
    /**
     * Structural diffing for `Iterable` types such as `Array`s.
     */
    exports.iterableDiff = lang_1.CONST_EXPR([lang_1.CONST_EXPR(new default_iterable_differ_1.DefaultIterableDifferFactory())]);
    exports.defaultIterableDiffers = lang_1.CONST_EXPR(new iterable_differs_1.IterableDiffers(exports.iterableDiff));
    exports.defaultKeyValueDiffers = lang_1.CONST_EXPR(new keyvalue_differs_1.KeyValueDiffers(exports.keyValDiff));
});
//# sourceMappingURL=change_detection.js.map