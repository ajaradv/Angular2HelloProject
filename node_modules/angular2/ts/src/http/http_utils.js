define(["require", "exports", 'angular2/src/facade/lang', './enums', 'angular2/src/facade/exceptions', 'angular2/src/facade/lang'], function (require, exports, lang_1, enums_1, exceptions_1, lang_2) {
    "use strict";
    function normalizeMethodName(method) {
        if (lang_1.isString(method)) {
            var originalMethod = method;
            method = method
                .replace(/(\w)(\w*)/g, function (g0, g1, g2) {
                return g1.toUpperCase() + g2.toLowerCase();
            });
            method = enums_1.RequestMethod[method];
            if (typeof method !== 'number')
                throw exceptions_1.makeTypeError("Invalid request method. The method \"" + originalMethod + "\" is not supported.");
        }
        return method;
    }
    exports.normalizeMethodName = normalizeMethodName;
    exports.isSuccess = function (status) { return (status >= 200 && status < 300); };
    function getResponseURL(xhr) {
        if ('responseURL' in xhr) {
            return xhr.responseURL;
        }
        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {
            return xhr.getResponseHeader('X-Request-URL');
        }
        return;
    }
    exports.getResponseURL = getResponseURL;
    exports.isJsObject = lang_2.isJsObject;
});
//# sourceMappingURL=http_utils.js.map