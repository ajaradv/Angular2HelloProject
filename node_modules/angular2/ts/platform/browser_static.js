define(["require", "exports", 'angular2/src/core/angular_entrypoint', 'angular2/src/platform/browser_common', 'angular2/src/facade/lang', 'angular2/src/platform/browser_common', 'angular2/core'], function (require, exports, angular_entrypoint_1, browser_common_1, lang_1, browser_common_2, core_1) {
    "use strict";
    exports.AngularEntrypoint = angular_entrypoint_1.AngularEntrypoint;
    exports.BROWSER_PROVIDERS = browser_common_1.BROWSER_PROVIDERS;
    exports.ELEMENT_PROBE_PROVIDERS = browser_common_1.ELEMENT_PROBE_PROVIDERS;
    exports.ELEMENT_PROBE_PROVIDERS_PROD_MODE = browser_common_1.ELEMENT_PROBE_PROVIDERS_PROD_MODE;
    exports.inspectNativeElement = browser_common_1.inspectNativeElement;
    exports.BrowserDomAdapter = browser_common_1.BrowserDomAdapter;
    exports.By = browser_common_1.By;
    exports.Title = browser_common_1.Title;
    exports.enableDebugTools = browser_common_1.enableDebugTools;
    exports.disableDebugTools = browser_common_1.disableDebugTools;
    /**
     * An array of providers that should be passed into `application()` when bootstrapping a component
     * when all templates
     * have been precompiled offline.
     */
    exports.BROWSER_APP_PROVIDERS = browser_common_2.BROWSER_APP_COMMON_PROVIDERS;
    /**
     * See {@link bootstrap} for more information.
     */
    function bootstrapStatic(appComponentType, customProviders, initReflector) {
        if (lang_1.isPresent(initReflector)) {
            initReflector();
        }
        var appProviders = lang_1.isPresent(customProviders) ? [exports.BROWSER_APP_PROVIDERS, customProviders] : exports.BROWSER_APP_PROVIDERS;
        return core_1.platform(browser_common_2.BROWSER_PROVIDERS).application(appProviders).bootstrap(appComponentType);
    }
    exports.bootstrapStatic = bootstrapStatic;
});
//# sourceMappingURL=browser_static.js.map